#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# vim:expandtab:smartindent:ts=4:tw=0:sw=4:

# Process this file with autoconf to produce a configure script.
AC_INIT(pads, 1.2.1, edwardfjellskaal@gmail.com)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE
AC_PROG_CC
AC_PROG_RANLIB
AC_DEFINE(PACKAGE_DATE, "04/18/10", Define the date of this release.)

##
# Define the arguments that that we accept.
##

# Determine whether or not MAC Vendor resolution will be enabled.
AC_ARG_ENABLE([vendor],
    AC_HELP_STRING([--disable-vendor],
        [ Disable MAC Vendor resolution. ]),
        [ AC_DEFINE(DISABLE_VENDOR, 1,
          Define 1 to disable MAC address vendor resolution.)
        ])

# The user has the option to ignore GCC version checks.
AC_ARG_ENABLE([gcc-version-check],
    AC_HELP_STRING([--disable-gcc-version-check],
        [ Disable configure's GCC version check. ]),
        [ DISABLE_GCC_CHECK="yes" ],
        [ DISABLE_GCC_CHECK="no" ])

echo
echo 'Configurating Passive Asset Dection System ...'
echo

##
# Configure Paths
##
AC_PREFIX_DEFAULT(/usr/local)
if test "$prefix" = "NONE"; then
    prefix="/usr/local"
fi
if test "$exec_prefix" = "NONE"; then
    exec_prefix=$prefix
fi

AH_TEMPLATE(INSTALL_PREFIX, [ Base directory of PADS installation. ])
AC_DEFINE_UNQUOTED(INSTALL_PREFIX, "`eval echo $prefix`")

AH_TEMPLATE(INSTALL_EXECPREFIX, [ Base directory for PADS system dependant installation. ])
AC_DEFINE_UNQUOTED(INSTALL_EXECPREFIX, "`eval echo $exec_prefix`")

AH_TEMPLATE(INSTALL_SYSCONFDIR, [ Directory containing configuration files (ex. 'etc/'). ])
AC_DEFINE_UNQUOTED(INSTALL_SYSCONFDIR, "`eval echo $sysconfdir`")

AH_TEMPLATE(INSTALL_DATADIR, [ Directory containing data files (ex. 'share/'). ])
AC_DEFINE_UNQUOTED(INSTALL_DATADIR, "`eval echo $datadir`")

AH_TEMPLATE(INSTALL_LIBDIR, [ Directory containing library files (ex. 'lib/). ])
AC_DEFINE_UNQUOTED(INSTALL_LIBDIR, "`eval echo $libdir`")

AH_TEMPLATE(INSTALL_BINDIR, [ Directory containing binary files (ex. 'bin/'). ])
AC_DEFINE_UNQUOTED(INSTALL_BINDIR, "`eval echo $bindir`")

##
# Configure PCRE
##
CPPFLAGS="${CPPFLAGS} `pcre-config --cflags`"
AC_CHECK_HEADERS(pcre.h,
    AC_DEFINE(HAVE_PCRE_H, 1, Have PCRE Header File),
    AC_MSG_ERROR([Cannot find PCRE header files!]))
LDFLAGS="${LDFLAGS} `pcre-config --libs`"
AC_CHECK_LIB(pcre, pcre_compile,
    EXTRA_LIBS="$EXTRA_LIBS -lpcre",
    AC_MSG_ERROR([Cannot find PCRE library files!]))

##
# Configure PCAP
##
AC_CHECK_HEADER(pcap.h,
    AC_DEFINE(HAVE_PCAP_H, 1, Have PCAP Header File),
    AC_MSG_ERROR([Cannot find pcap.h!]))
AC_CHECK_LIB(pcap, pcap_open_live,
    LIBS="$LIBS -lpcap",
    AC_MSG_ERROR([Cannot find PCAP libraries!!]))

##
# Checks for header files.
##
AC_CHECK_HEADERS([stdio.h stdarg.h signal.h time.h unistd.h])

##
# Checks for typedefs, structures, and compiler characteristics.
##
AC_C_CONST

##
# Checks for library functions.
##
AC_TYPE_SIGNAL
AC_CHECK_FUNCS(strlcpy)
AC_CHECK_FUNCS(strlcat)

##
# Determine GCC Version
##
if test "$DISABLE_GCC_CHECK" = "no"; then
    GCC_VERSION_FULL=`${CC} --version | sed -n '1s/^[[^ ]]* (.*) //;s/ .*$//;1p'`
    case "${GCC_VERSION_FULL}" in
        *2.95*)
        AC_MSG_ERROR([GCC 2.95.* is not supported.  Please use a more recent (>= 3.0) version of GCC.])
        ;;

        *)
        AC_MSG_RESULT([GCC ${GCC_VERSION_FULL} is supported.])
        ;;
    esac
fi

##
# Determine OS
##
AC_CANONICAL_HOST
AC_DEFINE_UNQUOTED(OS_TYPE, "$host", "Operating System Type")
case "$host" in

   *linux*)
    AC_DEFINE(OS, LINUX, Operating System)
    AC_DEFINE(LINUX, 1, Linux)
    ;;

   *freebsd*)
    AC_DEFINE(OS, FREEBSD, Operating System)
    AC_DEFINE(FREEBSD, 1, FreeBSD)
    ;;

   *bsd*)
    AC_DEFINE(OS, BSD, Operating System)
    AC_DEFINE(BSD, 1, BSD)
    ;;

   *solaris*)
    AC_DEFINE(OS, SOLARIS, Operating System)
    AC_DEFINE(SOLARIS, 1, Solaris)
    ;;

   *darwin*)
    AC_DEFINE(OS, DARWIN, Operating System)
    AC_DEFINE(DARWIN, 1, Darwin)
    ;;

   *)
    AC_DEFINE(OS, UNKNOWN_OS, Operating System)
    AC_DEFINE(UNKNOWN_OS, 1, Unknown OS)
    AC_MSG_WARN(
        Your OS ($target_os) is not supported yet.
        Try playing with the build host and target options.
    )
    sleep 3

    ;;
esac

##
# Define the global variables.
##
AC_SUBST(PCRE_OBJS)
AC_SUBST(EXTRA_DEFINES)
AC_SUBST(EXTRA_INCLUDES)
AC_SUBST(EXTRA_LIBS)

##
# And we're done!
##
AC_OUTPUT(Makefile doc/Makefile etc/Makefile lib/Makefile lib/bstring/Makefile src/Makefile src/output/Makefile)

